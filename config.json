{
    "client_name": "Burrbear",
    "commit_hash": "5895710ebabc0cb1b370b0414e17980d93f1c27c",
    "date": "December 2024",
    "date_interval": "December 29, 2024",
    "issue_overview_path": "./static/issue_overview.png",
    "issues": [
        {
            "active_lock_reason": null,
            "assignee": null,
            "assignees": [],
            "author_association": "MEMBER",
            "body": "**Description**\r\nCurrently, the `BoycoBurrZap.sol` contract contains several interfaces at the bottom of the file:\r\n- `IERC20Detailed`\r\n- `IComposableStablePool`\r\n- `IHoneyFactory`\r\n- `IPSMBondProxy`\r\n\r\nThese interfaces should be moved to dedicated files in an `interfaces` directory for better code organization, maintainability, and reusability.\r\n\r\n**Recommendation**\r\n1. Create a new `interfaces` directory under `src`\r\n2. Create separate files for each interface:\r\n   - `interfaces/IERC20Detailed.sol`\r\n   - `interfaces/IComposableStablePool.sol`\r\n   - `interfaces/IHoneyFactory.sol`\r\n   - `interfaces/IPSMBondProxy.sol`\r\n3. Move each interface to its respective file\r\n4. Update imports in `BoycoBurrZap.sol` to reference the new interface locations\r\n\r\nThis change will:\r\n- Improve code organization and maintainability\r\n- Make interfaces more discoverable\r\n- Enable reuse of interfaces across multiple contracts\r\n- Follow common Solidity project structure conventions\r\n",
            "closed_at": null,
            "closed_by": null,
            "comments": 0,
            "comments_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/7/comments",
            "created_at": "2024-12-29T09:38:03Z",
            "events_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/7/events",
            "html_url": "https://github.com/akiratechhq/review-xave-boyco-2024-12/issues/7",
            "id": 2762177046,
            "labels": [
                {
                    "color": "667788",
                    "default": false,
                    "description": null,
                    "id": 7939541795,
                    "name": "Report",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLIw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Report"
                },
                {
                    "color": "34C759",
                    "default": false,
                    "description": null,
                    "id": 7939541823,
                    "name": "Informational",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLPw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Informational"
                }
            ],
            "labels_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/7/labels{/name}",
            "locked": false,
            "milestone": null,
            "node_id": "I_kwDONjc1cM6ko3oW",
            "number": 7,
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/7/reactions"
            },
            "repository_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12",
            "state": "open",
            "state_reason": null,
            "timeline_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/7/timeline",
            "title": "Move interfaces from BoycoBurrZap.sol to dedicated interface files",
            "updated_at": "2024-12-29T09:38:11Z",
            "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/7",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/547012?v=4",
                "events_url": "https://api.github.com/users/cleanunicorn/events{/privacy}",
                "followers_url": "https://api.github.com/users/cleanunicorn/followers",
                "following_url": "https://api.github.com/users/cleanunicorn/following{/other_user}",
                "gists_url": "https://api.github.com/users/cleanunicorn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cleanunicorn",
                "id": 547012,
                "login": "cleanunicorn",
                "node_id": "MDQ6VXNlcjU0NzAxMg==",
                "organizations_url": "https://api.github.com/users/cleanunicorn/orgs",
                "received_events_url": "https://api.github.com/users/cleanunicorn/received_events",
                "repos_url": "https://api.github.com/users/cleanunicorn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cleanunicorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cleanunicorn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cleanunicorn",
                "user_view_type": "public"
            }
        },
        {
            "active_lock_reason": null,
            "assignee": null,
            "assignees": [],
            "author_association": "MEMBER",
            "body": "**Description**\r\nCurrently, the contract has inconsistent error handling. Most errors are defined as constant strings at the top of the contract, but some error messages are directly written in the require statements. For example:\r\n\r\n```solidity\r\n// Current approach - Mixed styles\r\n// Style 1: Using constants\r\nstring private constant ERROR_INVALID_RECIPIENT = \"Invalid recipient\";\r\nrequire(_recipient != address(0), ERROR_INVALID_RECIPIENT);\r\n\r\n// Style 2: Direct strings\r\nrequire(tokenDecimals <= 18, \"Token decimals must be <= 18\");\r\n```\r\n\r\nThis inconsistency makes error handling harder to maintain and update. It also makes it more difficult to ensure error message consistency across the codebase.\r\n\r\n**Recommendation**\r\n1. Move all error messages to constants at the top of the contract\r\n2. Use these constants in all require statements\r\n3. Follow the existing naming convention of `ERROR_*` for all error constants\r\n\r\nExample implementation:\r\n```solidity\r\n// Add to existing error constants\r\nstring private constant ERROR_INVALID_DECIMALS = \"Token decimals must be <= 18\";\r\n\r\n// Update the require statement\r\nrequire(tokenDecimals <= 18, ERROR_INVALID_DECIMALS);\r\n```\r\n\r\nThis change will:\r\n- Make error messages more maintainable\r\n- Ensure consistency across the codebase\r\n- Reduce the risk of typos in error messages\r\n- Make it easier to update error messages in the future\r\n- Potentially save gas by reusing constant strings\r\n",
            "closed_at": null,
            "closed_by": null,
            "comments": 0,
            "comments_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/6/comments",
            "created_at": "2024-12-29T09:36:06Z",
            "events_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/6/events",
            "html_url": "https://github.com/akiratechhq/review-xave-boyco-2024-12/issues/6",
            "id": 2762176399,
            "labels": [
                {
                    "color": "667788",
                    "default": false,
                    "description": null,
                    "id": 7939541795,
                    "name": "Report",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLIw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Report"
                },
                {
                    "color": "34C759",
                    "default": false,
                    "description": null,
                    "id": 7939541823,
                    "name": "Informational",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLPw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Informational"
                }
            ],
            "labels_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/6/labels{/name}",
            "locked": false,
            "milestone": null,
            "node_id": "I_kwDONjc1cM6ko3eP",
            "number": 6,
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/6/reactions"
            },
            "repository_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12",
            "state": "open",
            "state_reason": null,
            "timeline_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/6/timeline",
            "title": "Standardize error message handling",
            "updated_at": "2024-12-29T09:36:06Z",
            "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/6",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/547012?v=4",
                "events_url": "https://api.github.com/users/cleanunicorn/events{/privacy}",
                "followers_url": "https://api.github.com/users/cleanunicorn/followers",
                "following_url": "https://api.github.com/users/cleanunicorn/following{/other_user}",
                "gists_url": "https://api.github.com/users/cleanunicorn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cleanunicorn",
                "id": 547012,
                "login": "cleanunicorn",
                "node_id": "MDQ6VXNlcjU0NzAxMg==",
                "organizations_url": "https://api.github.com/users/cleanunicorn/orgs",
                "received_events_url": "https://api.github.com/users/cleanunicorn/received_events",
                "repos_url": "https://api.github.com/users/cleanunicorn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cleanunicorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cleanunicorn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cleanunicorn",
                "user_view_type": "public"
            }
        },
        {
            "active_lock_reason": null,
            "assignee": null,
            "assignees": [],
            "author_association": "MEMBER",
            "body": "**Description**\r\nIn the `_splitAmounts` function, `tokenIndex` is initialized to 0 and only set when the token is found in the loop. However, there's no validation to ensure the token was actually found. If the token isn't found (which shouldn't happen due to constructor checks, but is still a potential issue), the function would continue using the default value of 0, which could lead to incorrect calculations or unexpected behavior.\r\n\r\nCurrent code:\r\n```solidity\r\nuint256 tokenIndex = 0;  // initialized but not validated\r\n// ... loop that sets tokenIndex ...\r\n// tokenIndex is used later without validation\r\namountsIn[tokenIndex] = IERC20(TOKEN).balanceOf(address(this));\r\n```\r\n\r\n**Recommendation**\r\nAdd validation after the loop to ensure `tokenIndex` was properly set. This could be done by either:\r\n\r\n1. Adding a boolean flag:\r\n```solidity\r\nbool foundToken = false;\r\nuint256 tokenIndex = 0;\r\nfor (uint256 i = 0; i < len; i++) {\r\n    if (address(params.tokens[i]) == TOKEN) {\r\n        tokenIndex = i;\r\n        foundToken = true;\r\n    }\r\n    // ... rest of loop ...\r\n}\r\nrequire(foundToken, \"Token not found in pool\");\r\n```\r\n\r\n2. Or using a similar pattern to `_getHoneyIndex`:\r\n```solidity\r\nfunction _getTokenIndex(IERC20[] memory tokens) private view returns (uint256) {\r\n    for (uint256 i = 0; i < tokens.length; i++) {\r\n        if (address(tokens[i]) == TOKEN) {\r\n            return i;\r\n        }\r\n    }\r\n    require(false, \"Token not found in pool\");\r\n    return 0;\r\n}\r\n```\r\n\r\n**References**\r\n- Similar validation is already implemented for HONEY token in the `_getHoneyIndex` function\r\n",
            "closed_at": null,
            "closed_by": null,
            "comments": 0,
            "comments_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/5/comments",
            "created_at": "2024-12-29T09:26:36Z",
            "events_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/5/events",
            "html_url": "https://github.com/akiratechhq/review-xave-boyco-2024-12/issues/5",
            "id": 2762173620,
            "labels": [
                {
                    "color": "667788",
                    "default": false,
                    "description": null,
                    "id": 7939541795,
                    "name": "Report",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLIw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Report"
                },
                {
                    "color": "FFCC00",
                    "default": false,
                    "description": null,
                    "id": 7939541857,
                    "name": "Minor",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLYQ",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Minor"
                }
            ],
            "labels_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/5/labels{/name}",
            "locked": false,
            "milestone": null,
            "node_id": "I_kwDONjc1cM6ko2y0",
            "number": 5,
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/5/reactions"
            },
            "repository_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12",
            "state": "open",
            "state_reason": null,
            "timeline_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/5/timeline",
            "title": "Add validation for `tokenIndex` in `_splitAmounts`",
            "updated_at": "2024-12-29T09:26:36Z",
            "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/5",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/547012?v=4",
                "events_url": "https://api.github.com/users/cleanunicorn/events{/privacy}",
                "followers_url": "https://api.github.com/users/cleanunicorn/followers",
                "following_url": "https://api.github.com/users/cleanunicorn/following{/other_user}",
                "gists_url": "https://api.github.com/users/cleanunicorn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cleanunicorn",
                "id": 547012,
                "login": "cleanunicorn",
                "node_id": "MDQ6VXNlcjU0NzAxMg==",
                "organizations_url": "https://api.github.com/users/cleanunicorn/orgs",
                "received_events_url": "https://api.github.com/users/cleanunicorn/received_events",
                "repos_url": "https://api.github.com/users/cleanunicorn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cleanunicorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cleanunicorn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cleanunicorn",
                "user_view_type": "public"
            }
        },
        {
            "active_lock_reason": null,
            "assignee": null,
            "assignees": [],
            "author_association": "MEMBER",
            "body": "**Description**\r\nThe `_splitAmounts` function in BoycoBurrZap.sol takes a `MintParams` struct containing three arrays: `tokens`, `balances`, and `scalingFactors`. Currently, the function assumes these arrays have matching lengths but doesn't explicitly validate this assumption.\r\n\r\nIf these arrays have mismatched lengths, it could lead to:\r\n1. Array index out of bounds errors\r\n2. Incorrect calculations\r\n3. Potential security vulnerabilities\r\n\r\n**Recommendation**\r\nAdd input validation at the start of `_splitAmounts` to ensure all arrays have matching lengths:\r\n\r\n```solidity:code/src/BoycoBurrZap.sol\r\nfunction _splitAmounts(MintParams memory params) private returns (uint256[] memory amountsIn) {\r\n    uint256 len = params.balances.length;\r\n    require(\r\n        params.tokens.length == len && params.scalingFactors.length == len,\r\n        \"Array lengths must match\"\r\n    );\r\n    amountsIn = new uint256[](len);\r\n    // ... rest of the function\r\n}\r\n```\r\n\r\nIt's unclear if the order and content of (`tokens`, `balances`) versus (`scalingFactors`) should always use the same token order. Checking the Balancer V2 implementation did not create enough certainty.\r\n\r\n",
            "closed_at": null,
            "closed_by": null,
            "comments": 0,
            "comments_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/4/comments",
            "created_at": "2024-12-29T09:18:14Z",
            "events_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/4/events",
            "html_url": "https://github.com/akiratechhq/review-xave-boyco-2024-12/issues/4",
            "id": 2762171164,
            "labels": [
                {
                    "color": "667788",
                    "default": false,
                    "description": null,
                    "id": 7939541795,
                    "name": "Report",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLIw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Report"
                },
                {
                    "color": "FF9500",
                    "default": false,
                    "description": null,
                    "id": 7939541911,
                    "name": "Medium",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLlw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Medium"
                }
            ],
            "labels_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/4/labels{/name}",
            "locked": false,
            "milestone": null,
            "node_id": "I_kwDONjc1cM6ko2Mc",
            "number": 4,
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/4/reactions"
            },
            "repository_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12",
            "state": "open",
            "state_reason": null,
            "timeline_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/4/timeline",
            "title": "Add array length validation in `_splitAmounts`",
            "updated_at": "2024-12-29T09:18:47Z",
            "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/4",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/547012?v=4",
                "events_url": "https://api.github.com/users/cleanunicorn/events{/privacy}",
                "followers_url": "https://api.github.com/users/cleanunicorn/followers",
                "following_url": "https://api.github.com/users/cleanunicorn/following{/other_user}",
                "gists_url": "https://api.github.com/users/cleanunicorn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cleanunicorn",
                "id": 547012,
                "login": "cleanunicorn",
                "node_id": "MDQ6VXNlcjU0NzAxMg==",
                "organizations_url": "https://api.github.com/users/cleanunicorn/orgs",
                "received_events_url": "https://api.github.com/users/cleanunicorn/received_events",
                "repos_url": "https://api.github.com/users/cleanunicorn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cleanunicorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cleanunicorn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cleanunicorn",
                "user_view_type": "public"
            }
        },
        {
            "active_lock_reason": null,
            "assignee": null,
            "assignees": [],
            "author_association": "MEMBER",
            "body": "**Description**\r\nThe `BoycoBurrZap` contract currently has no way to recover tokens or ETH that might accidentally get sent to it. While the contract is designed to immediately use any deposited tokens in the happy path, Royco might accidentally send tokens or ETH directly to the contract address.\r\n\r\nWe should add recovery methods that allow the contract owner to withdraw any tokens (including the managed tokens) or ETH that gets stuck in the contract. This is safe because:\r\n1. In normal operation, the contract should never hold any tokens - they are immediately deposited in the pool\r\n2. Only accidentally sent funds would remain in the contract\r\n3. The contract is not designed to be a custody solution\r\n\r\n**Recommendation**\r\nAdd the following methods to the contract:\r\n\r\n```solidity:code/src/BoycoBurrZap.sol\r\nfunction recoverERC20(address token, address recipient, uint256 amount) external onlyOwner {\r\n    IERC20(token).transfer(recipient, amount);\r\n    emit RecoveredERC20(token, recipient, amount);\r\n}\r\n\r\nfunction recoverETH(address recipient, uint256 amount) external onlyOwner {\r\n    (bool success,) = recipient.call{value: amount}(\"\");\r\n    require(success, \"ETH transfer failed\");\r\n    emit RecoveredETH(recipient, amount);\r\n}\r\n```\r\n\r\nAlso add the corresponding events:\r\n```solidity\r\nevent RecoveredERC20(address indexed token, address indexed recipient, uint256 amount);\r\nevent RecoveredETH(address indexed recipient, uint256 amount);\r\n```\r\n\r\n",
            "closed_at": null,
            "closed_by": null,
            "comments": 0,
            "comments_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/3/comments",
            "created_at": "2024-12-29T08:23:12Z",
            "events_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/3/events",
            "html_url": "https://github.com/akiratechhq/review-xave-boyco-2024-12/issues/3",
            "id": 2762155693,
            "labels": [
                {
                    "color": "667788",
                    "default": false,
                    "description": null,
                    "id": 7939541795,
                    "name": "Report",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLIw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Report"
                },
                {
                    "color": "FFCC00",
                    "default": false,
                    "description": null,
                    "id": 7939541857,
                    "name": "Minor",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLYQ",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Minor"
                }
            ],
            "labels_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/3/labels{/name}",
            "locked": false,
            "milestone": null,
            "node_id": "I_kwDONjc1cM6koyat",
            "number": 3,
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/3/reactions"
            },
            "repository_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12",
            "state": "open",
            "state_reason": null,
            "timeline_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/3/timeline",
            "title": "Add token/ETH recovery methods to BoycoBurrZap",
            "updated_at": "2024-12-29T08:23:13Z",
            "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/3",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/547012?v=4",
                "events_url": "https://api.github.com/users/cleanunicorn/events{/privacy}",
                "followers_url": "https://api.github.com/users/cleanunicorn/followers",
                "following_url": "https://api.github.com/users/cleanunicorn/following{/other_user}",
                "gists_url": "https://api.github.com/users/cleanunicorn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cleanunicorn",
                "id": 547012,
                "login": "cleanunicorn",
                "node_id": "MDQ6VXNlcjU0NzAxMg==",
                "organizations_url": "https://api.github.com/users/cleanunicorn/orgs",
                "received_events_url": "https://api.github.com/users/cleanunicorn/received_events",
                "repos_url": "https://api.github.com/users/cleanunicorn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cleanunicorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cleanunicorn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cleanunicorn",
                "user_view_type": "public"
            }
        },
        {
            "active_lock_reason": null,
            "assignee": null,
            "assignees": [],
            "author_association": "MEMBER",
            "body": "**Description**\r\nThe contract currently uses `transferFrom` to transfer tokens from users to the contract. While this works for most ERC20 tokens, some tokens don't implement the ERC20 standard correctly and may not return a boolean value or may revert.\r\n\r\nBecause this contract might be used for other tokens, we have to make sure it supports all implementations.\r\n\r\nCurrent implementation in BoycoBurrZap.sol:\r\n\r\nhttps://github.com/akiratechhq/review-xave-boyco-2024-12/blob/aca54de00d73b87aad12d465491fcebf7abaa61a/code/src/BoycoBurrZap.sol#L160\r\n\r\nNotable examples of non-standard ERC20 implementations:\r\n1. USDT (Tether) - Doesn't return a boolean on transfers\r\n2. BNB (old version) - Didn't return a boolean on transfers\r\n3. ZRX - Required updating to handle both old and new transfer patterns\r\n\r\n**Recommendation**\r\nUse OpenZeppelin's `SafeERC20` library which provides `safeTransferFrom`. This wrapper handles non-standard implementations and ensures transfers work correctly across all ERC20 tokens:\r\n\r\n```solidity\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract BoycoBurrZap is Ownable {\r\n    using SafeERC20 for IERC20;\r\n    \r\n    // ... in deposit function:\r\n    IERC20(TOKEN).safeTransferFrom(msg.sender, address(this), _depositAmount);\r\n}\r\n```\r\n\r\n**References**\r\n1. OpenZeppelin SafeERC20: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/utils/SafeERC20.sol\r\n2. USDT Implementation: https://etherscan.io/token/0xdac17f958d2ee523a2206206994597c13d831ec7#code\r\n3. Navigating the pitfalls of securely interacting with ERC20 tokens: https://soliditydeveloper.com/safe-erc20\r\n4. Missing return value bug \u2014 At least 130 tokens affected: https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\r\n5. Why does SafeERC20 assume that the token's transfer and transferFrom return value is optional?: https://ethereum.stackexchange.com/a/137057/6253\r\n",
            "closed_at": null,
            "closed_by": null,
            "comments": 0,
            "comments_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/2/comments",
            "created_at": "2024-12-29T08:08:43Z",
            "events_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/2/events",
            "html_url": "https://github.com/akiratechhq/review-xave-boyco-2024-12/issues/2",
            "id": 2762151630,
            "labels": [
                {
                    "color": "667788",
                    "default": false,
                    "description": null,
                    "id": 7939541795,
                    "name": "Report",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLIw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Report"
                },
                {
                    "color": "FF9500",
                    "default": false,
                    "description": null,
                    "id": 7939541911,
                    "name": "Medium",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLlw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Medium"
                }
            ],
            "labels_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/2/labels{/name}",
            "locked": false,
            "milestone": null,
            "node_id": "I_kwDONjc1cM6koxbO",
            "number": 2,
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/2/reactions"
            },
            "repository_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12",
            "state": "open",
            "state_reason": null,
            "timeline_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/2/timeline",
            "title": "Return variables not checked from `transferFrom`",
            "updated_at": "2024-12-29T08:14:13Z",
            "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/2",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/547012?v=4",
                "events_url": "https://api.github.com/users/cleanunicorn/events{/privacy}",
                "followers_url": "https://api.github.com/users/cleanunicorn/followers",
                "following_url": "https://api.github.com/users/cleanunicorn/following{/other_user}",
                "gists_url": "https://api.github.com/users/cleanunicorn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cleanunicorn",
                "id": 547012,
                "login": "cleanunicorn",
                "node_id": "MDQ6VXNlcjU0NzAxMg==",
                "organizations_url": "https://api.github.com/users/cleanunicorn/orgs",
                "received_events_url": "https://api.github.com/users/cleanunicorn/received_events",
                "repos_url": "https://api.github.com/users/cleanunicorn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cleanunicorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cleanunicorn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cleanunicorn",
                "user_view_type": "public"
            }
        },
        {
            "active_lock_reason": null,
            "assignee": null,
            "assignees": [],
            "author_association": "MEMBER",
            "body": "**Description**\r\nThe current implementation in `BoycoBurrZap.sol` checks if HONEY, NECT, and the base token are present in the pool, but doesn't verify that these (plus the virtual BPT token) are the only tokens in the pool. If additional unexpected tokens are present, the contract might still initialize successfully, potentially leading to incorrect calculations or unexpected behavior.\r\n\r\nCurrent code only checks for token presence:\r\n\r\nhttps://github.com/akiratechhq/review-xave-boyco-2024-12/blob/aca54de00d73b87aad12d465491fcebf7abaa61a/code/src/BoycoBurrZap.sol#L115-L126\r\n\r\n**Recommendation**\r\nAdd a check to verify that the pool contains exactly 4 tokens (HONEY, NECT, base token, and the virtual BPT token):\r\n\r\n```solidity\r\nrequire(tokens.length == 4, \"Invalid number of pool tokens\");\r\n```\r\n\r\nThis ensures that no unexpected tokens are present in the pool that could affect the zapping calculations or create unforeseen issues.\r\n\r\n**References**\r\n- [Balancer ComposableStable Pool documentation](https://balancer.gitbook.io/balancer-v2/products/balancer-pools/composable-stable-pools#what-does-composable-mean) regarding virtual BPT token\r\n- Current implementation in `BoycoBurrZap.sol` constructor\r\n",
            "closed_at": null,
            "closed_by": null,
            "comments": 0,
            "comments_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/1/comments",
            "created_at": "2024-12-29T07:46:27Z",
            "events_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/1/events",
            "html_url": "https://github.com/akiratechhq/review-xave-boyco-2024-12/issues/1",
            "id": 2762145588,
            "labels": [
                {
                    "color": "667788",
                    "default": false,
                    "description": null,
                    "id": 7939541795,
                    "name": "Report",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLIw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Report"
                },
                {
                    "color": "FF9500",
                    "default": false,
                    "description": null,
                    "id": 7939541911,
                    "name": "Medium",
                    "node_id": "LA_kwDONjc1cM8AAAAB2TvLlw",
                    "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/labels/Medium"
                }
            ],
            "labels_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/1/labels{/name}",
            "locked": false,
            "milestone": null,
            "node_id": "I_kwDONjc1cM6kov80",
            "number": 1,
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/1/reactions"
            },
            "repository_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12",
            "state": "open",
            "state_reason": null,
            "timeline_url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/1/timeline",
            "title": "Strengthen pool token validation in `BoycoBurrZap` constructor",
            "updated_at": "2024-12-29T07:47:20Z",
            "url": "https://api.github.com/repos/akiratechhq/review-xave-boyco-2024-12/issues/1",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/547012?v=4",
                "events_url": "https://api.github.com/users/cleanunicorn/events{/privacy}",
                "followers_url": "https://api.github.com/users/cleanunicorn/followers",
                "following_url": "https://api.github.com/users/cleanunicorn/following{/other_user}",
                "gists_url": "https://api.github.com/users/cleanunicorn/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/cleanunicorn",
                "id": 547012,
                "login": "cleanunicorn",
                "node_id": "MDQ6VXNlcjU0NzAxMg==",
                "organizations_url": "https://api.github.com/users/cleanunicorn/orgs",
                "received_events_url": "https://api.github.com/users/cleanunicorn/received_events",
                "repos_url": "https://api.github.com/users/cleanunicorn/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/cleanunicorn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/cleanunicorn/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/cleanunicorn",
                "user_view_type": "public"
            }
        }
    ],
    "person_days": "1",
    "project_name": "BoycoBurrZap",
    "review_period": "1 day",
    "source_repository": "https://github.com/burrbear-dev/boyco-flow",
    "template": "./Readme.md.mustache"
}